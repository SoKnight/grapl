apply plugin: 'java-library'

apply plugin: 'maven-publish'
apply plugin: 'signing'

java {
    withJavadocJar()
    withSourcesJar()
}


abstract class ProjectMavenPublishConfiguration {
    abstract Property<String> getArtifactId()
    abstract Property<String> getName()
    abstract Property<String> getDescription()
}

class MavenPublishPlugin implements Plugin<Project> {
    ProjectMavenPublishConfiguration config
    Project project

    void apply(Project project) {
        project.getPlugins().apply(this.class)
        this.project = project
        config = project.extensions.create('maven', ProjectMavenPublishConfiguration)

        project.afterEvaluate {
            project.publishing {
                publications {
                    mavenJava(MavenPublication) {
                        artifactId = config.artifactId.getOrElse(null)
                        pom {
                            name = config.name.getOrElse(null)
                            description = config.description.getOrElse(null)
                        }
                    }
                }
            }
        }

        project.publishing {
            publications {
                mavenJava(MavenPublication){
                    from project.components.java
                    groupId = project.mvn_groupId

                    pom {
                        url = project.mvn_url

                        licenses {
                            license {
                                name = project.mvn_licence_name
                                url = project.mvn_licence_url
                            }
                        }
                        developers {
                            developer {
                                id = project.mvn_developer_id
                                name = project.mvn_developer_name
                                email = project.mvn_developer_email
                            }
                        }
                        scm {
                            connection = project.mvn_git
                            developerConnection = project.mvn_git
                            url = project.mvn_url
                        }
                    }
                }
            }
            repositories {
                maven {
                    def releasesUrl = project.uri("https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/")
                    def snapshotsUrl = project.uri("https://s01.oss.sonatype.org/content/repositories/snapshots/")
                    url = project.version.toString().endsWith("SNAPSHOT") ? snapshotsUrl : releasesUrl
                    credentials {
                        username = project.properties["ossrhUsername"].toString()
                        password = project.properties["ossrhPassword"].toString()
                    }
                }
            }
        }

        project.nexusStaging {
            packageGroup = project.mvn_groupId
            serverUrl = "https://s01.oss.sonatype.org/service/local/"
            username = project.properties["ossrhUsername"].toString()
            password = project.properties["ossrhPassword"].toString()
        }

        project.signing {
            sign project.publishing.publications.mavenJava
        }
    }
}
apply plugin: MavenPublishPlugin
